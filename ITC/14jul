# MÁQUINAS DE ESTADOS FINITOS

- Existem basicamente dois tipos de MEF:
    - os transdutores
    - os reconhecedores de linguagem

Os transdutores são máquinas com entrada e saída;
Os reconhecedores são máquinas com apenas duas saídas possíveis. Aceita a entrada ou rejeita a entrada.

As linguagens reconhecidas por MEF são denominadas linguagens regulares.
Uma característica importante nas MEFs é que sua memória é limitada e organizada em torno do conceito de estados.

As MEF do tipo reconhecedor de linguagem são conhecidos como AUTÔMATOS FINITOS.
As MEF do tipo transdutor são conhecidos como AUTÔMATOS FINITOS COM SAÍDA.

Ex.: Máquina de bebidas.

Simular o funcionamento de uma máquina de bebidas através de uma Máquina de Estados.
    - o valor da bebida é de R$ 1,5;
    - Não dá troco;
    - uma vez recebido o valor a máquina deve liberar a bebida;
    - uma única entrada para moedas.

Tabular todas as entradas possíveis:
    - uma moeda de $0,5 e uma de $1;
    - uma moeda de $1 e uma de $0,5;
    - três moedas de $0,5.

Cada entrada acima gera um estado:
    - q0 = estado de espera para inicar o programa.
    - q1 = a máquina recebeu $0,5;
    - q2 = a máquina recebeu $1.

Q0 -> q1 (recebeu 0,5) -> (espera $1 para o final) -> qf
Q0 -> q1 (recebeu 0,5) -> (recebeu $0,5) -> q2 (espera $0,5 para o final) -> qf
Q0 -> q2 (recebeu $1) -> (espera $0,5 para o final) -> qf

O autômato finito é exatamente uma máquina estática que tem UM ÚNICO PROPÓSITO. Para qualquer outra coisa, a máquina não funciona.

Problema Homem + Cabra + Repolho + Lobo
1. Lobo não pode ficar só com a cabra;
2. Cabra não pode ficar só com o repolho. 

Resolução (minha):

HLRC -> [];
H+C -> C FICA -> [LR] -> [HC]-> H VOLTA -> [LRH] [C] -> H + L -> [R] [LHC] -> H+C VOLTA -> [RHC] [L] -> H+R -> [C] [HRL] -> H VOLTA -> [HC] [LR] -> H+C -> [] [HRLC]. FIM

Cada estado é representado por um conjunto e cada transição possível é representado por uma seta com os ocupantes do barco. Os estados iniciais e finais são diferenciados. 
O espaço de estados pode ser representado por um grafo dirigido em que os vértices são os estados e as arestas as transições.
Pela figura vemos que existem infinitas soluções.
Duas, porém, são mínimas: cslcrsc e csrclsc
Definimos o alfabeto E = {s,l,c,r} e as combinações sobre E são as palavras.

### AUTÔMATO FINITO: 
Def1 = é um sistema de estados finitos (predefinidos) que constitui um modelo computacional sequencial
Def2 = é uma estrutura matemática constituída por três tipos de entidades:
    - um conjunto finito de estados
    - 
    - 

Def3 = um formalismo operacional ou reconhecedor.

### CLASSIFICAÇÃO AF
- Determinístico: dependendo do estado e do símbolo lido o sistema só poderá assumir 1 estado.
- Não-determinístico: poderá assumir um conjunto de estados.
- Com movimentos vazios: dependendo do estado e sem ler um símbolo o sistema pode assumir um novo ou um conjunto existente.

### AF DETERMINÍSTICO: 
- Pode ser visto como uma máquina constituída de três partes: 
    - Fita: dispositivo de entrada;
    - Unidade de controle: reflete o estado corrente da máquina
    - Programa, Função Programa ou Função de transição: função que comanda as leituras e define o estado da máquina.

        - FITA: 
            - Divisão de células. Cada uma delas armazena um símbolo que pertence ao alfabeto de entrada.
            - Não é possível gravar sobre a fita.
            - A informação de entrada (palavra a ser processada) ocupa toda a fita.

        - UNIDADE DE CONTROLE:
            - Possui um número finito e pré-definido de estados (controle finito)
            - Lê um símbolo da fita de cada vez;
            - Após a leitura, move-se uma célula para a direita
            - Começa sempre da esquerda para a direita. Ou se move para a direita ou permanece no mesmo lugar.
        
        - PROGRAMA: 
            - É uma função parcial, tal que dependendo do estado corrente e do símbolo lido, determina o novo estado do autômato.
        
        - FORMALISMO: 
            - O AFD M é uma quintupla ordenada: 
                M = (E, Q, sigma, q0, F)
            
            - Onde: 
                - 
                - 
                - 
                - sigma: programa ou função de transição (QxE - > Q - pares ordenados indo para Q. Pares ordenados que vão para apenas um estado.)
                - Que é uma função Total. Supondo que sigma é definida para um estado p e um símbolo a, resultando num estado q, então: 
                            sigma(p,a) = q
                - Que é uma transição do autômato.
                - q0 = é um símbolo distinguido de Q denominado estado inicial